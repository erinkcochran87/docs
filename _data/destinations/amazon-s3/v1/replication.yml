# --------------------------------------- #
#      AMAZON S3 REPLICATION DETAILS      #
# --------------------------------------- #

## Details about replication/loading for
## Stitch's Amazon S3 destination.

configurable-loading-behavior:  "false"

upsert-support: "false"

append-support: "true"

primary-key-support: "false"

nested-structure-support: "Dependent on data storage format"

# rename-original-column-in-split:  "false"

list:
  - id: "incremental-replication-upserts"
    categories: "replication"
    value: *incremental-rep-upserts
    description: |
      Stitch's {{ destination.display_name }} destination doesn't currently support upserts, or updates to existing rows.

      When Stitch loads data into {{ destination.display_name }} destinations, it will load it in an append-only fashion. This means that new records and updates to existing records are appended to the end of tables as new rows. Existing records are never updated. 

      More info and examples can be found in the [Loading section](#loading) and [Append-Only querying guide]({{ link.replication.append-only-querying | prepend: site.baseurl }}).

  - id: "primary-keys"
    categories: "replication"
    value: *primary-key-support
    description: |
      {{ destination.display_name }} destinations do not have native support for Primary Keys.
  
  # Need to confirm this. It should be supported, but I'm not totally sure about it.

  # - id: "multiple-data-types"
  #   categories: "replication"
  #   value: *multiple-data-type-support
  #   description: |
  #     {{ destination.display_name }} destinations 

  - id: "nested-data-structures"
    categories: "replication"
    value: *nested-structure-support
    important: true
    description: |
      Depending on the data storage format you select, nested data structures may be kept intact or flattened into relational objects:

      - **CSV**: To ensure nested data can be loaded, Stitch will flatten objects and arrays into columns and subtables, respectively. For more info and examples, refer to the [Schema](#schema) section below or the [Handling nested data structures guide]({{ link.destinations.storage.nested-structures | prepend: site.baseurl }}).
      - **JSON**: Nested data will be kept intact.

      Refer to the [Schema](#schema) section for more info and examples of how data will be stored in each format.

  - id: "incompatible-sources"
    categories: "replication"
    important: true
    ## The value and description for this live in _data/destinations/reference/defaults.yml