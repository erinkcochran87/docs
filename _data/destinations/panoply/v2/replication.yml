# -------------------------- #
#         Replication        #
# -------------------------- #

replication-info:
  incremental-replication:
    upserts: &incremental-rep-upserts |
      true
    append: &incremental-rep-append |
      true

  primary-keys:
    supported: &primary-key-support |
      false

  multiple-data-types:
    supported: &multiple-data-type-support |
      false

  nested-structures:
    supported: &nested-structure-support |
      false


list:
  - id: "incremental-replication-upserts"
    categories: "replication"
    value: *incremental-rep-upserts
    description: |
      Using a table's Primary Keys, Stitch will perform an update operation on existing rows to overwrite the data.

  - id: "primary-keys"
    categories: "replication"
    value: *primary-key-support
    important: true
    description: |
      {{ destination.display_name }} destinations do not have native support for Primary Keys.

      As Stitch requires Primary Keys to de-dupe data during Incremental Replication, Primary Keys for tables are retained using [table comments](https://docs.aws.amazon.com/redshift/latest/dg/r_COMMENT.html){:target="new"}.

      **Removing or incorrectly altering table comments can lead to replication issues.**

  - id: "multiple-data-types"
    categories: "replication"
    value: *multiple-data-type-support
    important: true
    description: |
      {{ destination.display_name }} destinations do not support multiple data types in a single column.

      To accommodate this scenario, Stitch will create additional columns for each data type. Refer to the [Table structural changes guide]({{ link.destinations.storage.structure-changes | prepend: site.baseurl }}) for examples and more info.

  - id: "nested-data-structures"
    categories: "replication"
    value: *nested-structure-support
    important: true
    description: |
      {{ destination.display_name }} destinations do not have native support for nested data structures.

      To ensure nested data can be loaded, Stitch will flatten objects and arrays into columns and subtables, respectively. For more info and examples, refer to the [Handling nested data structures guide]({{ link.destinations.storage.nested-structures | prepend: site.baseurl }}).

  - id: "incompatible-sources"
    categories: "replication"
    important: true
    ## The value and description for this live in _data/destinations/reference/defaults.yml